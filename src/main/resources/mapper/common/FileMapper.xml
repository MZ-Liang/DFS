<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dfs.api.mapper.common.FileMapper">

  <sql id="select_column">
    id, file_name, bucket_name, object_name, file_size, status, file_type, document_type, module_type, 
    unit, creator, regenerator, create_time, update_time, delete_time
  </sql>
  
  <sql id="select_file_column">
  	bf.order_number,
    file.id, file.file_name, file.bucket_name, file.object_name, file.file_size, file.status, file.file_type, file.document_type, file.module_type, 
    file.unit, file.creator, file.regenerator, file.create_time, file.update_time, file.delete_time
  </sql>

  <sql id="where_condition">
    <where>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR}
      </if>
      <if test="bucketName != null">
        and bucket_name = #{bucketName,jdbcType=VARCHAR}
      </if>
      <if test="objectName != null">
        and object_name = #{objectName,jdbcType=VARCHAR}
      </if>
      <if test="fileSize != null">
        and file_size = #{fileSize,jdbcType=VARCHAR}
      </if>
      <if test="status != null">
        and status = #{status,jdbcType=INTEGER}
      </if>
      <if test="fileType != null">
        and file_type = #{fileType,jdbcType=VARCHAR}
      </if>
      <if test="documentType != null">
        and document_type = #{documentType,jdbcType=INTEGER}
      </if>
      <if test="moduleType != null">
        and module_type = #{moduleType,jdbcType=INTEGER}
      </if>
      <if test="unit != null">
        and unit = #{unit,jdbcType=BIGINT}
      </if>
      <if test="creator != null">
        and creator = #{creator,jdbcType=BIGINT}
      </if>
      <if test="regenerator != null">
        and regenerator = #{regenerator,jdbcType=BIGINT}
      </if>
      <if test="createTime != null">
        and create_time = #{createTime,jdbcType=BIGINT}
      </if>
      <if test="updateTime != null">
        and update_time = #{updateTime,jdbcType=BIGINT}
      </if>
      <if test="deleteTime != null">
        and delete_time = #{deleteTime,jdbcType=BIGINT}
      </if>
    </where>
  </sql>

  <insert id="insert" parameterType="com.dfs.api.entity.common.FileEntity">
    insert into file (id, file_name, bucket_name, 
      object_name, file_size, status, 
      file_type, document_type, module_type, 
      unit, creator, 
      regenerator, create_time, update_time, 
      delete_time)
    values (#{id,jdbcType=BIGINT}, #{fileName,jdbcType=VARCHAR}, #{bucketName,jdbcType=VARCHAR}, 
      #{objectName,jdbcType=VARCHAR}, #{fileSize,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{fileType,jdbcType=VARCHAR}, #{documentType,jdbcType=INTEGER}, #{moduleType,jdbcType=INTEGER}, 
      #{unit,jdbcType=BIGINT}, #{creator,jdbcType=BIGINT}, 
      #{regenerator,jdbcType=BIGINT}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, 
      #{deleteTime,jdbcType=BIGINT})
  </insert>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from file
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <update id="updateByPrimaryKey" parameterType="com.dfs.api.entity.common.FileEntity">
    update file
    set file_name = #{fileName,jdbcType=VARCHAR},
      bucket_name = #{bucketName,jdbcType=VARCHAR},
      object_name = #{objectName,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      file_type = #{fileType,jdbcType=VARCHAR},
      document_type = #{documentType,jdbcType=INTEGER},
      module_type = #{moduleType,jdbcType=INTEGER},
      unit = #{unit,jdbcType=BIGINT},
      creator = #{creator,jdbcType=BIGINT},
      regenerator = #{regenerator,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.dfs.api.entity.common.FileEntity">
    update file
    <set>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="bucketName != null">
        bucket_name = #{bucketName,jdbcType=VARCHAR},
      </if>
      <if test="objectName != null">
        object_name = #{objectName,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        file_size = #{fileSize,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="fileType != null">
        file_type = #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="documentType != null">
        document_type = #{documentType,jdbcType=INTEGER},
      </if>
      <if test="moduleType != null">
        module_type = #{moduleType,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="regenerator != null">
        regenerator = #{regenerator,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultType="com.dfs.api.entity.common.FileEntity">
    select 
    <include refid="select_column" />
    from file
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByCondition" parameterType="com.dfs.api.entity.common.FileEntity" resultType="com.dfs.api.entity.common.FileEntity">
    select 
    <include refid="select_column" />
    from file
    <include refid="where_condition" />
  </select>

  <select id="countByCondition" parameterType="com.dfs.api.entity.common.FileEntity" resultType="java.lang.Integer">
    select count(*) 
    from file
    <include refid="where_condition" />
  </select>
  
  <select id="getFilesByBookIdAndFileType" resultType="com.dfs.api.model.common.FileEntityModel">
    select
    	<include refid="select_file_column" />
    from file,book_file bf
    <where>
    	bf.file_id=file.id and bf.book_id=#{bookId,jdbcType=BIGINT}
    	<if test="moduleType != null">
    		and file.module_type=#{moduleType,jdbcType=INTEGER}
    	</if>
    	<if test="fileType != null">
    		and file.file_type=#{fileType,jdbcType=INTEGER}
    	</if>
    	<if test="status != null">
    		and file.status=#{status,jdbcType=INTEGER}
    	</if>
    </where>
  </select>
</mapper>