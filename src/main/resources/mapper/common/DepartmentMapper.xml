<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dfs.api.mapper.common.DepartmentMapper">

  <sql id="select_column">
    id, department_name, department_name_en, role
  </sql>
  
  <sql id="select_basic_column">
  	id, department_name as name
  </sql>

  <sql id="where_condition">
    <where>
      <if test="departmentName != null">
        department_name = #{departmentName,jdbcType=VARCHAR}
      </if>
      <if test="departmentNameEn != null">
        and department_name_en = #{departmentNameEn,jdbcType=VARCHAR}
      </if>
      <if test="role != null">
        and role = #{role,jdbcType=BIGINT}
      </if>
    </where>
  </sql>

  <insert id="insert" parameterType="com.dfs.api.entity.common.DepartmentEntity">
    insert into department (id, department_name, department_name_en, 
      role)
    values (#{id,jdbcType=BIGINT}, #{departmentName,jdbcType=VARCHAR}, #{departmentNameEn,jdbcType=VARCHAR}, 
      #{role,jdbcType=BIGINT})
  </insert>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from department
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <update id="updateByPrimaryKey" parameterType="com.dfs.api.entity.common.DepartmentEntity">
    update department
    set department_name = #{departmentName,jdbcType=VARCHAR},
      department_name_en = #{departmentNameEn,jdbcType=VARCHAR},
      role = #{role,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.dfs.api.entity.common.DepartmentEntity">
    update department
    <set>
      <if test="departmentName != null">
        department_name = #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="departmentNameEn != null">
        department_name_en = #{departmentNameEn,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultType="com.dfs.api.entity.common.DepartmentEntity">
    select 
    <include refid="select_column" />
    from department
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByCondition" parameterType="com.dfs.api.entity.common.DepartmentEntity" resultType="com.dfs.api.entity.common.DepartmentEntity">
    select 
    <include refid="select_column" />
    from department
    <include refid="where_condition" />
  </select>

  <select id="countByCondition" parameterType="com.dfs.api.entity.common.DepartmentEntity" resultType="java.lang.Integer">
    select count(*) 
    from department
    <include refid="where_condition" />
  </select>
  
  <select id="getDepartmentBasicModelByBookId" parameterType="java.lang.Long" resultType="com.dfs.api.model.BasicModel">
    select d.id, d.department_name name
    from department as d,book_department as b
    where b.book_id=#{bookId,jdbcType=BIGINT} and b.department_id=d.id
  </select>
  
  <select id="listBasicMode" resultType="com.dfs.api.model.BasicModel">
    select id, department_name name
    from department
  </select>
</mapper>