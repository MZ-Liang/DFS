<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dfs.api.mapper.book.BookDepartmentMapper">

  <sql id="select_column">
    id, book_id, department_id
  </sql>

  <sql id="where_condition">
    <where>
      <if test="bookId != null">
        book_id = #{bookId,jdbcType=BIGINT}
      </if>
      <if test="departmentId != null">
        and department_id = #{departmentId,jdbcType=BIGINT}
      </if>
    </where>
  </sql>

  <insert id="insert" parameterType="com.dfs.api.entity.book.BookDepartmentEntity">
    insert into book_department (id, book_id, department_id
      )
    values (#{id,jdbcType=BIGINT}, #{bookId,jdbcType=BIGINT}, #{departmentId,jdbcType=BIGINT}
      )
  </insert>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from book_department
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <update id="updateByPrimaryKey" parameterType="com.dfs.api.entity.book.BookDepartmentEntity">
    update book_department
    set book_id = #{bookId,jdbcType=BIGINT},
      department_id = #{departmentId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.dfs.api.entity.book.BookDepartmentEntity">
    update book_department
    <set>
      <if test="bookId != null">
        book_id = #{bookId,jdbcType=BIGINT},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultType="com.dfs.api.entity.book.BookDepartmentEntity">
    select 
    <include refid="select_column" />
    from book_department
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByCondition" parameterType="com.dfs.api.entity.book.BookDepartmentEntity" resultType="com.dfs.api.entity.book.BookDepartmentEntity">
    select 
    <include refid="select_column" />
    from book_department
    <include refid="where_condition" />
  </select>

  <select id="countByCondition" parameterType="com.dfs.api.entity.book.BookDepartmentEntity" resultType="java.lang.Integer">
    select count(*) 
    from book_department
    <include refid="where_condition" />
  </select>
  
  <select id="getRelationBasicModelByBookId" parameterType="java.lang.Long" resultType="com.dfs.api.model.RelationBasicModel">
    select d.id,d.name,bd.id relationId,bd.book_id parentId 
    from book_department bd,department d
    where bd.department_id=d.id and bd.book_id=#{bookId,jdbcType=BIGINT}
  </select>
</mapper>