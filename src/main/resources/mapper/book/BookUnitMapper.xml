<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dfs.api.mapper.book.BookUnitMapper">

  <sql id="select_column">
    id, book_id, unit_id
  </sql>

  <sql id="where_condition">
    <where>
      <if test="bookId != null">
        book_id = #{bookId,jdbcType=BIGINT}
      </if>
      <if test="unitId != null">
        and unit_id = #{unitId,jdbcType=BIGINT}
      </if>
    </where>
  </sql>

  <insert id="insert" parameterType="com.dfs.api.entity.book.BookUnitEntity">
    insert into book_unit (id, book_id, unit_id
      )
    values (#{id,jdbcType=BIGINT}, #{bookId,jdbcType=BIGINT}, #{unitId,jdbcType=BIGINT}
      )
  </insert>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from book_unit
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <update id="updateByPrimaryKey" parameterType="com.dfs.api.entity.book.BookUnitEntity">
    update book_unit
    set book_id = #{bookId,jdbcType=BIGINT},
      unit_id = #{unitId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.dfs.api.entity.book.BookUnitEntity">
    update book_unit
    <set>
      <if test="bookId != null">
        book_id = #{bookId,jdbcType=BIGINT},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultType="com.dfs.api.entity.book.BookUnitEntity">
    select 
    <include refid="select_column" />
    from book_unit
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByCondition" parameterType="com.dfs.api.entity.book.BookUnitEntity" resultType="com.dfs.api.entity.book.BookUnitEntity">
    select 
    <include refid="select_column" />
    from book_unit
    <include refid="where_condition" />
  </select>

  <select id="countByCondition" parameterType="com.dfs.api.entity.book.BookUnitEntity" resultType="java.lang.Integer">
    select count(*) 
    from book_unit
    <include refid="where_condition" />
  </select>
  
  <select id="getRelationtBasicModelByBookId" resultType="com.dfs.api.model.RelationBasicModel">
    select u.id,u.name,bu.id relationId,bu.book_id partentId
    from book_unit bu,unit u
    where bu.unit_id=u.id and bu.book_id=#{bookId,jdbcType=BIGINT} and u.unit_type=#{unitType,jdbcType=INTEGER}
  </select>
</mapper>